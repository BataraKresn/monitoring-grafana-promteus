services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    user: nobody
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus/tailscale_servers.yml:/etc/prometheus/tailscale_servers.yml
      - ./config/prometheus/docker_targets.yml:/etc/prometheus/docker_targets.yml
      - ./config/prometheus/pm2_targets.yml:/etc/prometheus/pm2_targets.yml
      - ./config/prometheus/mongodb_targets.yml:/etc/prometheus/mongodb_targets.yml
      - ./config/prometheus/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'
    networks:
      - monitoring-net
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      retries: 3
      start_period: 10s



  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring-net
    healthcheck:
      test: ["CMD", "wget", "--spider", "-S", "http://localhost:3000/api/health"]
      interval: 30s
      retries: 3
      start_period: 10s

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: always
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
    networks:
      - monitoring-net
    healthcheck:
      test: ["CMD", "wget", "--spider", "-S", "http://localhost:9093/-/healthy"]
      interval: 30s
      retries: 3
      start_period: 10s

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  monitoring-net:
    driver: bridge
